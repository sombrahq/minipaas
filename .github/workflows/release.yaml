name: MiniPaaS Release

on:
  push:
    tags:
      - "*.*.*"

env:
  GO_VERSION: '1.22'

jobs:
  build-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
        include:
          - goos: darwin
            os: macos-latest
          - goos: linux
            os: ubuntu-latest
          - goos: windows
            os: windows-latest
            suffix: .exe
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod tidy
        working-directory: minipaas-cli

      - name: Build CLI
        run: make -C minipaas-cli build WHAT=minipaas SUFFIX=${{ matrix.suffix }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.goos }}-${{ matrix.goarch }}
          path: minipaas-cli/build/

  build-sql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/upload-artifact@v4
        with:
          name: minipaas-sql
          path: minipaas-sql/**

  release:
    runs-on: ubuntu-latest
    needs: [build-cli, build-sql]
    permissions:
      contents: write
    steps:
      - name: Download Linux AMD64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-linux-amd64

      - name: Download Windows AMD64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-windows-amd64

      - name: Download Darwin AMD64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-darwin-amd64

      - name: Download SQL Artifacts
        uses: actions/download-artifact@v4
        with:
          name: minipaas-sql

      - name: Release on GitHub
        uses: softprops/action-gh-release@v2

  publish-role:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible Galaxy CLI
        run: |
          python -m pip install --upgrade pip
          pip install "ansible-core>=2.15"

      - name: Publish to Ansible Galaxy
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
        run: ansible-galaxy role import sombrahq_bot/minipaas-role
