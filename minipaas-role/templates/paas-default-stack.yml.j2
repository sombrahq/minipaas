services:

  caddy:
    image: "caddy:{{ caddy_image_tag }}"
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile", "--resume"]
    volumes:
      - /etc/caddy:/etc/caddy:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - minipaas_network
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test:
        - CMD-SHELL
        - wget -qO- --spider http://127.0.0.1:2019/config
      timeout: 10s
      interval: 10s
      retries: 5
      start_period: 10s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

{% if minipaas_registry_enabled %}
  registry:
    image: registry:{{ minipaas_registry_image_tag }}
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - minipaas_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

{% endif %}

networks:
  minipaas_network:
    external: true

volumes:
  caddy_data:
  caddy_config:
{% if minipaas_registry_enabled %}
  registry_data:
{% endif %}

